From: <postbox@lisdatacenter.org>
Subject: job 718805 us
Date: May 4, 2020 at 1:34:00 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        
  Use of the data in the LUXEMBOURG INCOME STUDY DATABASE is governed by
  regulations which do not allow copying or further distribution of the 
  survey microdata.                                                     

  Anyone violating these regulations will lose all privileges to the    
  databases and may be subject to prosecution under the law. In addition,
  any attempt to circumvent the LIS processing system or unauthorized entry
  into the LIS computing system will result in prosecution.             

  All papers written using the LUXEMBOURG INCOME STUDY DATABASE must be 
  submitted for entry into the Working Papers Series.                   
  Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- 10 * wNtile(df$dhi, df$hpopwgt, 0.5) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is",  
+            "in", "ie", "il", "it", "jp", "lt", "lu", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn") 
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(67, 69, 71, 73:75, 78:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("us") 
[1] "Loading dataset us74h..."
us74h,market_hh,0.4687,0.0031,120
us74h,market_sqrt,0.4113,0.0038,120
us74h,market_pc,0.4508,0.0037,120
us74h,market_oecdm,0.406,0.0033,120
us74h,market_ae,0.4154,0.0038,120
us74h,gross_hh,0.3954,0.0027,120
us74h,gross_sqrt,0.3511,0.0027,120
us74h,gross_pc,0.3882,0.0031,120
us74h,gross_oecdm,0.343,0.0031,120
us74h,gross_ae,0.3509,0.0029,120
us74h,disp_hh,0.3643,0.0026,120
us74h,disp_sqrt,0.3171,0.0028,120
us74h,disp_pc,0.3566,0.003,120
us74h,disp_oecdm,0.3087,0.0029,120
us74h,disp_ae,0.317,0.0025,120
us74h,con_hh,NaN,NA,120
us74h,con_sqrt,NaN,NA,120
us74h,con_pc,NaN,NA,120
us74h,con_oecdm,NaN,NA,120
us74h,con_ae,NaN,NA,120
[1] "Loading dataset us79h..."
us79h,market_hh,0.482,0.0013,120
us79h,market_sqrt,0.4272,0.0016,120
us79h,market_pc,0.46,0.0017,120
us79h,market_oecdm,0.4279,0.0015,120
us79h,market_ae,0.4378,0.0016,120
us79h,gross_hh,0.3986,0.0013,120
us79h,gross_sqrt,0.3552,0.0014,120
us79h,gross_pc,0.3872,0.0014,120
us79h,gross_oecdm,0.3541,0.0013,120
us79h,gross_ae,0.3636,0.0013,120
us79h,disp_hh,0.3577,0.0013,120
us79h,disp_sqrt,0.3112,0.001,120
us79h,disp_pc,0.3473,0.0013,120
us79h,disp_oecdm,0.3094,0.0013,120
us79h,disp_ae,0.3202,0.0012,120
us79h,con_hh,NaN,NA,120
us79h,con_sqrt,NaN,NA,120
us79h,con_pc,NaN,NA,120
us79h,con_oecdm,NaN,NA,120
us79h,con_ae,NaN,NA,120
[1] "Loading dataset us86h..."
us86h,market_hh,0.5044,0.0016,120
us86h,market_sqrt,0.4569,0.0016,120
us86h,market_pc,0.4869,0.0016,120
us86h,market_oecdm,0.4576,0.0017,120
us86h,market_ae,0.4665,0.0016,120
us86h,gross_hh,0.4175,0.0013,120
us86h,gross_sqrt,0.3839,0.0014,120
us86h,gross_pc,0.4144,0.0015,120
us86h,gross_oecdm,0.383,0.0014,120
us86h,gross_ae,0.3921,0.0014,120
us86h,disp_hh,0.3768,0.0013,120
us86h,disp_sqrt,0.3418,0.0014,120
us86h,disp_pc,0.3765,0.0013,120
us86h,disp_oecdm,0.3406,0.0013,120
us86h,disp_ae,0.351,0.0012,120
us86h,con_hh,NaN,NA,120
us86h,con_sqrt,NaN,NA,120
us86h,con_pc,NaN,NA,120
us86h,con_oecdm,NaN,NA,120
us86h,con_ae,NaN,NA,120
[1] "Loading dataset us91h..."
us91h,market_hh,0.5136,0.0016,120
us91h,market_sqrt,0.4671,0.0019,120
us91h,market_pc,0.4984,0.0015,120
us91h,market_oecdm,0.4689,0.0018,120
us91h,market_ae,0.478,0.0018,120
us91h,gross_hh,0.419,0.0015,120
us91h,gross_sqrt,0.3866,0.0013,120
us91h,gross_pc,0.419,0.0016,120
us91h,gross_oecdm,0.3866,0.0016,120
us91h,gross_ae,0.3961,0.0015,120
us91h,disp_hh,0.3808,0.0011,120
us91h,disp_sqrt,0.3468,0.0013,120
us91h,disp_pc,0.3831,0.0014,120
us91h,disp_oecdm,0.3465,0.0013,120
us91h,disp_ae,0.3571,0.0016,120
us91h,con_hh,NaN,NA,120
us91h,con_sqrt,NaN,NA,120
us91h,con_pc,NaN,NA,120
us91h,con_oecdm,NaN,NA,120
us91h,con_ae,NaN,NA,120
[1] "Loading dataset us94h..."
us94h,market_hh,0.5333,0.0017,120
us94h,market_sqrt,0.4855,0.0017,120
us94h,market_pc,0.5136,0.002,120
us94h,market_oecdm,0.4872,0.0019,120
us94h,market_ae,0.4951,0.0018,120
us94h,gross_hh,0.4346,0.0014,120
us94h,gross_sqrt,0.4014,0.0012,120
us94h,gross_pc,0.4295,0.0018,120
us94h,gross_oecdm,0.4011,0.0015,120
us94h,gross_ae,0.409,0.0017,120
us94h,disp_hh,0.3955,0.0015,120
us94h,disp_sqrt,0.3606,0.0014,120
us94h,disp_pc,0.393,0.0018,120
us94h,disp_oecdm,0.36,0.0015,120
us94h,disp_ae,0.3692,0.0014,120
us94h,con_hh,NaN,NA,120
us94h,con_sqrt,NaN,NA,120
us94h,con_pc,NaN,NA,120
us94h,con_oecdm,NaN,NA,120
us94h,con_ae,NaN,NA,120
[1] "Loading dataset us97h..."
us97h,market_hh,0.5277,0.0019,120
us97h,market_sqrt,0.4807,0.0018,120
us97h,market_pc,0.5107,0.0017,120
us97h,market_oecdm,0.4826,0.0018,120
us97h,market_ae,0.4912,0.0016,120
us97h,gross_hh,0.4357,0.0015,120
us97h,gross_sqrt,0.4025,0.0017,120
us97h,gross_pc,0.4325,0.0016,120
us97h,gross_oecdm,0.4029,0.0017,120
us97h,gross_ae,0.4114,0.0017,120
us97h,disp_hh,0.3951,0.0013,120
us97h,disp_sqrt,0.3601,0.0016,120
us97h,disp_pc,0.3948,0.0015,120
us97h,disp_oecdm,0.3603,0.0017,120
us97h,disp_ae,0.3702,0.0014,120
us97h,con_hh,NaN,NA,120
us97h,con_sqrt,NaN,NA,120
us97h,con_pc,NaN,NA,120
us97h,con_oecdm,NaN,NA,120
us97h,con_ae,NaN,NA,120
[1] "Loading dataset us00h..."
us00h,market_hh,0.5249,0.0015,120
us00h,market_sqrt,0.4744,0.0014,120
us00h,market_pc,0.5045,0.0015,120
us00h,market_oecdm,0.4772,0.0014,120
us00h,market_ae,0.4855,0.0015,120
us00h,gross_hh,0.4395,0.0014,120
us00h,gross_sqrt,0.4038,0.0014,120
us00h,gross_pc,0.4327,0.0012,120
us00h,gross_oecdm,0.4052,0.0015,120
us00h,gross_ae,0.413,0.0014,120
us00h,disp_hh,0.3957,0.0015,120
us00h,disp_sqrt,0.3564,0.0015,120
us00h,disp_pc,0.3896,0.0016,120
us00h,disp_oecdm,0.3574,0.0015,120
us00h,disp_ae,0.3665,0.0016,120
us00h,con_hh,NaN,NA,120
us00h,con_sqrt,NaN,NA,120
us00h,con_pc,NaN,NA,120
us00h,con_oecdm,NaN,NA,120
us00h,con_ae,NaN,NA,120
[1] "Loading dataset us04h..."
us04h,market_hh,0.5393,0.0014,120
us04h,market_sqrt,0.4871,0.0015,120
us04h,market_pc,0.5159,0.0013,120
us04h,market_oecdm,0.4895,0.0014,120
us04h,market_ae,0.4975,0.0016,120
us04h,gross_hh,0.4444,0.0014,120
us04h,gross_sqrt,0.4053,0.0012,120
us04h,gross_pc,0.4323,0.0014,120
us04h,gross_oecdm,0.4061,0.0013,120
us04h,gross_ae,0.4134,0.0014,120
us04h,disp_hh,0.4084,0.0014,120
us04h,disp_sqrt,0.3643,0.0012,120
us04h,disp_pc,0.3939,0.0016,120
us04h,disp_oecdm,0.3649,0.0017,120
us04h,disp_ae,0.3727,0.0013,120
us04h,con_hh,NaN,NA,120
us04h,con_sqrt,NaN,NA,120
us04h,con_pc,NaN,NA,120
us04h,con_oecdm,NaN,NA,120
us04h,con_ae,NaN,NA,120
[1] "Loading dataset us07h..."
us07h,market_hh,0.5328,0.0014,120
us07h,market_sqrt,0.4823,0.0015,120
us07h,market_pc,0.5126,0.0015,120
us07h,market_oecdm,0.4855,0.0014,120
us07h,market_ae,0.4938,0.0015,120
us07h,gross_hh,0.4432,0.0014,120
us07h,gross_sqrt,0.4056,0.0014,120
us07h,gross_pc,0.4346,0.0015,120
us07h,gross_oecdm,0.4074,0.0013,120
us07h,gross_ae,0.4151,0.0014,120
us07h,disp_hh,0.4148,0.0014,120
us07h,disp_sqrt,0.3722,0.0014,120
us07h,disp_pc,0.4026,0.0015,120
us07h,disp_oecdm,0.3736,0.0013,120
us07h,disp_ae,0.3816,0.0015,120
us07h,con_hh,NaN,NA,120
us07h,con_sqrt,NaN,NA,120
us07h,con_pc,NaN,NA,120
us07h,con_oecdm,NaN,NA,120
us07h,con_ae,NaN,NA,120
[1] "Loading dataset us10h..."
us10h,market_hh,0.5581,0.0018,120
us10h,market_sqrt,0.5083,0.0015,120
us10h,market_pc,0.5368,0.0014,120
us10h,market_oecdm,0.5118,0.0014,120
us10h,market_ae,0.5196,0.0014,120
us10h,gross_hh,0.4464,0.0014,120
us10h,gross_sqrt,0.409,0.0015,120
us10h,gross_pc,0.4372,0.0014,120
us10h,gross_oecdm,0.4109,0.0013,120
us10h,gross_ae,0.4185,0.0014,120
us10h,disp_hh,0.4113,0.0013,120
us10h,disp_sqrt,0.3692,0.0012,120
us10h,disp_pc,0.3999,0.0014,120
us10h,disp_oecdm,0.3709,0.0013,120
us10h,disp_ae,0.379,0.0013,120
us10h,con_hh,NaN,NA,120
us10h,con_sqrt,NaN,NA,120
us10h,con_pc,NaN,NA,120
us10h,con_oecdm,NaN,NA,120
us10h,con_ae,NaN,NA,120
[1] "Loading dataset us13h..."
us13h,market_hh,0.5628,0.0017,120
us13h,market_sqrt,0.5097,0.002,120
us13h,market_pc,0.5358,0.0019,120
us13h,market_oecdm,0.513,0.0019,120
us13h,market_ae,0.5201,0.0019,120
us13h,gross_hh,0.4527,0.0017,120
us13h,gross_sqrt,0.4136,0.0015,120
us13h,gross_pc,0.4387,0.0017,120
us13h,gross_oecdm,0.4153,0.0017,120
us13h,gross_ae,0.4218,0.0017,120
us13h,disp_hh,0.421,0.0015,120
us13h,disp_sqrt,0.3786,0.0017,120
us13h,disp_pc,0.4062,0.0018,120
us13h,disp_oecdm,0.3802,0.0019,120
us13h,disp_ae,0.3873,0.0016,120
us13h,con_hh,NaN,NA,120
us13h,con_sqrt,NaN,NA,120
us13h,con_pc,NaN,NA,120
us13h,con_oecdm,NaN,NA,120
us13h,con_ae,NaN,NA,120
[1] "Loading dataset us16h..."
us16h,market_hh,0.5653,0.0015,120
us16h,market_sqrt,0.5095,0.0015,120
us16h,market_pc,0.5353,0.0019,120
us16h,market_oecdm,0.5128,0.0016,120
us16h,market_ae,0.5197,0.0018,120
us16h,gross_hh,0.4583,0.0014,120
us16h,gross_sqrt,0.4187,0.0015,120
us16h,gross_pc,0.4439,0.0013,120
us16h,gross_oecdm,0.4205,0.0013,120
us16h,gross_ae,0.4271,0.0014,120
us16h,disp_hh,0.4234,0.0014,120
us16h,disp_sqrt,0.3814,0.0014,120
us16h,disp_pc,0.4104,0.0015,120
us16h,disp_oecdm,0.3832,0.0015,120
us16h,disp_ae,0.3908,0.0013,120
us16h,con_hh,NaN,NA,120
us16h,con_sqrt,NaN,NA,120
us16h,con_pc,NaN,NA,120
us16h,con_oecdm,NaN,NA,120
us16h,con_ae,NaN,NA,120
> 
> proc.time()
    user   system  elapsed 
1008.777    2.539 1017.148 


