From: postbox@lisdatacenter.org
Subject: job 591453 gt
Date: December 21, 2018 at 12:05:44 PM CST
To: fsolt@mac.com

############################### NOTICE TO USERS ###############################
                                                                        
  Use of the data in the LUXEMBOURG INCOME STUDY DATABASE is governed by
  regulations which do not allow copying or further distribution of the 
  survey microdata.                                                     

  Anyone violating these regulations will lose all privileges to the    
  databases and may be subject to prosecution under the law. In addition,
  any attempt to circumvent the LIS processing system or unauthorized entry
  into the LIS computing system will result in prosecution.             

  All papers written using the LUXEMBOURG INCOME STUDY DATABASE must be 
  submitted for entry into the Working Papers Series.                   
  Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, var) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- 10 * wNtile(df$dhi, df$hpopwgt, 0.5) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hi, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hitp), (df$factor + df$hitp), df$factor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hc, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars, subset) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] %>% 
> #     filter(eval(parse(text = subset), .)) 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(funs(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is",  
+            "in", "ie", "il", "it", "jp", "lu", "lt", "mx", "nl", "no", "pa",   
+            "py", "pe", "pl", "ro", "ru", "rs", "sk", "si", "za", "kr", "es",   
+            "se", "ch", "tw", "uk", "us", "uy") 
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(67, 69, 71, 73:75, 78:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hi", "factor", "hitp", "hc", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("gt") 
[1] "Loading dataset gt06h..."
gt06h,market_hh,0.4991,0.0054,120
gt06h,market_sqrt,0.4893,0.0054,120
gt06h,market_pc,0.5266,0.0058,120
gt06h,market_oecdm,0.4942,0.0053,120
gt06h,market_ae,0.5056,0.0055,120
gt06h,gross_hh,0.4912,0.0054,120
gt06h,gross_sqrt,0.4823,0.0058,120
gt06h,gross_pc,0.5211,0.0059,120
gt06h,gross_oecdm,0.4874,0.0059,120
gt06h,gross_ae,0.4993,0.0059,120
gt06h,disp_hh,0.483,0.0051,120
gt06h,disp_sqrt,0.4731,0.0056,120
gt06h,disp_pc,0.5131,0.0061,120
gt06h,disp_oecdm,0.478,0.0053,120
gt06h,disp_ae,0.4903,0.0053,120
gt06h,con_hh,0.3938,0.0053,120
gt06h,con_sqrt,0.3942,0.0059,120
gt06h,con_pc,0.4506,0.0054,120
gt06h,con_oecdm,0.4083,0.0064,120
gt06h,con_ae,0.4238,0.0061,120
[1] "Loading dataset gt11h..."
gt11h,market_hh,0.5042,0.0047,120
gt11h,market_sqrt,0.4925,0.0047,120
gt11h,market_pc,0.5226,0.0047,120
gt11h,market_oecdm,0.495,0.005,120
gt11h,market_ae,0.5045,0.0047,120
gt11h,gross_hh,0.4995,0.0046,120
gt11h,gross_sqrt,0.4909,0.0042,120
gt11h,gross_pc,0.5222,0.0049,120
gt11h,gross_oecdm,0.4934,0.0042,120
gt11h,gross_ae,0.5033,0.0042,120
gt11h,disp_hh,0.4906,0.0044,120
gt11h,disp_sqrt,0.4806,0.0043,120
gt11h,disp_pc,0.5115,0.0043,120
gt11h,disp_oecdm,0.4824,0.0047,120
gt11h,disp_ae,0.4923,0.0047,120
gt11h,con_hh,0.3527,0.0042,120
gt11h,con_sqrt,0.3356,0.0045,120
gt11h,con_pc,0.3841,0.0035,120
gt11h,con_oecdm,0.3455,0.0044,120
gt11h,con_ae,0.3592,0.0052,120
[1] "Loading dataset gt14h..."
gt14h,market_hh,0.4473,0.0041,120
gt14h,market_sqrt,0.4222,0.0051,120
gt14h,market_pc,0.4545,0.0049,120
gt14h,market_oecdm,0.4234,0.0042,120
gt14h,market_ae,0.434,0.0056,120
gt14h,gross_hh,0.4405,0.0041,120
gt14h,gross_sqrt,0.418,0.0044,120
gt14h,gross_pc,0.4517,0.0052,120
gt14h,gross_oecdm,0.4194,0.0044,120
gt14h,gross_ae,0.4304,0.0051,120
gt14h,disp_hh,0.4201,0.0047,120
gt14h,disp_sqrt,0.3907,0.0053,120
gt14h,disp_pc,0.4226,0.0055,120
gt14h,disp_oecdm,0.3896,0.005,120
gt14h,disp_ae,0.4005,0.006,120
gt14h,con_hh,0.3334,0.0041,120
gt14h,con_sqrt,0.3247,0.0042,120
gt14h,con_pc,0.378,0.0046,120
gt14h,con_oecdm,0.3384,0.0038,120
gt14h,con_ae,0.3529,0.0044,120
> 
> proc.time()
   user  system elapsed 
126.599   0.418 345.223 


