From: <postbox@lisdatacenter.org>
Subject: job 718579 cl
Date: May 3, 2020 at 11:05:47 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        
  Use of the data in the LUXEMBOURG INCOME STUDY DATABASE is governed by
  regulations which do not allow copying or further distribution of the 
  survey microdata.                                                     

  Anyone violating these regulations will lose all privileges to the    
  databases and may be subject to prosecution under the law. In addition,
  any attempt to circumvent the LIS processing system or unauthorized entry
  into the LIS computing system will result in prosecution.             

  All papers written using the LUXEMBOURG INCOME STUDY DATABASE must be 
  submitted for entry into the Working Papers Series.                   
  Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- 10 * wNtile(df$dhi, df$hpopwgt, 0.5) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is",  
+            "in", "ie", "il", "it", "jp", "lt", "lu", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn") 
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(67, 69, 71, 73:75, 78:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("cl") 
[1] "Loading dataset cl90h..."
cl90h,market_hh,0.5558,0.0027,200
cl90h,market_sqrt,0.5281,0.003,200
cl90h,market_pc,0.5488,0.0031,200
cl90h,market_oecdm,0.5323,0.0032,200
cl90h,market_ae,0.538,0.0032,200
cl90h,gross_hh,0.4979,0.003,200
cl90h,gross_sqrt,0.4806,0.0029,200
cl90h,gross_pc,0.5027,0.0029,200
cl90h,gross_oecdm,0.4837,0.0033,200
cl90h,gross_ae,0.4899,0.0031,200
cl90h,disp_hh,0.4979,0.003,200
cl90h,disp_sqrt,0.4806,0.0027,200
cl90h,disp_pc,0.5027,0.0028,200
cl90h,disp_oecdm,0.4837,0.0027,200
cl90h,disp_ae,0.4899,0.0028,200
cl90h,con_hh,NaN,NA,200
cl90h,con_sqrt,NaN,NA,200
cl90h,con_pc,NaN,NA,200
cl90h,con_oecdm,NaN,NA,200
cl90h,con_ae,NaN,NA,200
[1] "Loading dataset cl92h..."
cl92h,market_hh,0.545,0.0022,200
cl92h,market_sqrt,0.5142,0.0028,200
cl92h,market_pc,0.5358,0.0024,200
cl92h,market_oecdm,0.5176,0.0026,200
cl92h,market_ae,0.5237,0.0025,200
cl92h,gross_hh,0.4943,0.002,200
cl92h,gross_sqrt,0.4727,0.0027,200
cl92h,gross_pc,0.4954,0.0025,200
cl92h,gross_oecdm,0.4751,0.0031,200
cl92h,gross_ae,0.4816,0.0028,200
cl92h,disp_hh,0.4943,0.0024,200
cl92h,disp_sqrt,0.4727,0.0024,200
cl92h,disp_pc,0.4954,0.0023,200
cl92h,disp_oecdm,0.4751,0.0026,200
cl92h,disp_ae,0.4816,0.0022,200
cl92h,con_hh,NaN,NA,200
cl92h,con_sqrt,NaN,NA,200
cl92h,con_pc,NaN,NA,200
cl92h,con_oecdm,NaN,NA,200
cl92h,con_ae,NaN,NA,200
[1] "Loading dataset cl94h..."
cl94h,market_hh,0.5571,0.0025,200
cl94h,market_sqrt,0.5266,0.0025,200
cl94h,market_pc,0.5463,0.003,200
cl94h,market_oecdm,0.5298,0.0025,200
cl94h,market_ae,0.5353,0.0026,200
cl94h,gross_hh,0.5047,0.0025,200
cl94h,gross_sqrt,0.484,0.0023,200
cl94h,gross_pc,0.5044,0.0024,200
cl94h,gross_oecdm,0.4862,0.0026,200
cl94h,gross_ae,0.492,0.0024,200
cl94h,disp_hh,0.5047,0.0023,200
cl94h,disp_sqrt,0.484,0.0023,200
cl94h,disp_pc,0.5044,0.0025,200
cl94h,disp_oecdm,0.4862,0.0024,200
cl94h,disp_ae,0.492,0.0024,200
cl94h,con_hh,NaN,NA,200
cl94h,con_sqrt,NaN,NA,200
cl94h,con_pc,NaN,NA,200
cl94h,con_oecdm,NaN,NA,200
cl94h,con_ae,NaN,NA,200
[1] "Loading dataset cl96h..."
cl96h,market_hh,0.5503,0.0037,200
cl96h,market_sqrt,0.5241,0.0042,200
cl96h,market_pc,0.5465,0.0043,200
cl96h,market_oecdm,0.5295,0.0043,200
cl96h,market_ae,0.5354,0.0045,200
cl96h,gross_hh,0.4978,0.0037,200
cl96h,gross_sqrt,0.4804,0.0035,200
cl96h,gross_pc,0.5033,0.0045,200
cl96h,gross_oecdm,0.4847,0.004,200
cl96h,gross_ae,0.4909,0.0035,200
cl96h,disp_hh,0.4978,0.0038,200
cl96h,disp_sqrt,0.4804,0.0037,200
cl96h,disp_pc,0.5033,0.0044,200
cl96h,disp_oecdm,0.4847,0.0041,200
cl96h,disp_ae,0.4909,0.0045,200
cl96h,con_hh,NaN,NA,200
cl96h,con_sqrt,NaN,NA,200
cl96h,con_pc,NaN,NA,200
cl96h,con_oecdm,NaN,NA,200
cl96h,con_ae,NaN,NA,200
[1] "Loading dataset cl98h..."
cl98h,market_hh,0.5495,0.0028,200
cl98h,market_sqrt,0.527,0.0027,200
cl98h,market_pc,0.5523,0.003,200
cl98h,market_oecdm,0.5328,0.0026,200
cl98h,market_ae,0.5397,0.0033,200
cl98h,gross_hh,0.499,0.0026,200
cl98h,gross_sqrt,0.4862,0.0029,200
cl98h,gross_pc,0.5128,0.0028,200
cl98h,gross_oecdm,0.4912,0.0028,200
cl98h,gross_ae,0.4986,0.003,200
cl98h,disp_hh,0.499,0.0024,200
cl98h,disp_sqrt,0.4862,0.0028,200
cl98h,disp_pc,0.5128,0.003,200
cl98h,disp_oecdm,0.4912,0.0027,200
cl98h,disp_ae,0.4986,0.0028,200
cl98h,con_hh,NaN,NA,200
cl98h,con_sqrt,NaN,NA,200
cl98h,con_pc,NaN,NA,200
cl98h,con_oecdm,NaN,NA,200
cl98h,con_ae,NaN,NA,200
[1] "Loading dataset cl00h..."
cl00h,market_hh,0.5606,0.0037,200
cl00h,market_sqrt,0.5406,0.004,200
cl00h,market_pc,0.5655,0.0036,200
cl00h,market_oecdm,0.5482,0.0043,200
cl00h,market_ae,0.5545,0.0043,200
cl00h,gross_hh,0.5005,0.0032,200
cl00h,gross_sqrt,0.4904,0.004,200
cl00h,gross_pc,0.5169,0.0034,200
cl00h,gross_oecdm,0.4973,0.0043,200
cl00h,gross_ae,0.5042,0.0043,200
cl00h,disp_hh,0.5005,0.0037,200
cl00h,disp_sqrt,0.4904,0.0037,200
cl00h,disp_pc,0.5169,0.004,200
cl00h,disp_oecdm,0.4973,0.0034,200
cl00h,disp_ae,0.5042,0.0042,200
cl00h,con_hh,NaN,NA,200
cl00h,con_sqrt,NaN,NA,200
cl00h,con_pc,NaN,NA,200
cl00h,con_oecdm,NaN,NA,200
cl00h,con_ae,NaN,NA,200
[1] "Loading dataset cl03h..."
cl03h,market_hh,0.5498,0.0025,200
cl03h,market_sqrt,0.5243,0.0026,200
cl03h,market_pc,0.5504,0.0027,200
cl03h,market_oecdm,0.53,0.0025,200
cl03h,market_ae,0.5372,0.0024,200
cl03h,gross_hh,0.4945,0.0027,200
cl03h,gross_sqrt,0.479,0.0028,200
cl03h,gross_pc,0.506,0.0029,200
cl03h,gross_oecdm,0.4837,0.0026,200
cl03h,gross_ae,0.4913,0.0028,200
cl03h,disp_hh,0.4945,0.0024,200
cl03h,disp_sqrt,0.479,0.0021,200
cl03h,disp_pc,0.506,0.0028,200
cl03h,disp_oecdm,0.4837,0.0027,200
cl03h,disp_ae,0.4913,0.0021,200
cl03h,con_hh,NaN,NA,200
cl03h,con_sqrt,NaN,NA,200
cl03h,con_pc,NaN,NA,200
cl03h,con_oecdm,NaN,NA,200
cl03h,con_ae,NaN,NA,200
[1] "Loading dataset cl06h..."
cl06h,market_hh,0.5374,0.0022,200
cl06h,market_sqrt,0.5052,0.0023,200
cl06h,market_pc,0.5302,0.0026,200
cl06h,market_oecdm,0.5109,0.0029,200
cl06h,market_ae,0.5178,0.0028,200
cl06h,gross_hh,0.4822,0.0026,200
cl06h,gross_sqrt,0.4595,0.0027,200
cl06h,gross_pc,0.4842,0.0029,200
cl06h,gross_oecdm,0.464,0.0026,200
cl06h,gross_ae,0.4709,0.003,200
cl06h,disp_hh,0.4822,0.0027,200
cl06h,disp_sqrt,0.4595,0.0024,200
cl06h,disp_pc,0.4842,0.0028,200
cl06h,disp_oecdm,0.464,0.0029,200
cl06h,disp_ae,0.4709,0.0025,200
cl06h,con_hh,NaN,NA,200
cl06h,con_sqrt,NaN,NA,200
cl06h,con_pc,NaN,NA,200
cl06h,con_oecdm,NaN,NA,200
cl06h,con_ae,NaN,NA,200
[1] "Loading dataset cl09h..."
cl09h,market_hh,0.5599,0.0035,200
cl09h,market_sqrt,0.5208,0.0039,200
cl09h,market_pc,0.5447,0.0043,200
cl09h,market_oecdm,0.5256,0.0045,200
cl09h,market_ae,0.5324,0.0039,200
cl09h,gross_hh,0.4851,0.0036,200
cl09h,gross_sqrt,0.4577,0.0042,200
cl09h,gross_pc,0.481,0.0042,200
cl09h,gross_oecdm,0.4609,0.0038,200
cl09h,gross_ae,0.4675,0.0042,200
cl09h,disp_hh,0.4851,0.0035,200
cl09h,disp_sqrt,0.4577,0.0041,200
cl09h,disp_pc,0.481,0.0041,200
cl09h,disp_oecdm,0.4609,0.0042,200
cl09h,disp_ae,0.4675,0.004,200
cl09h,con_hh,NaN,NA,200
cl09h,con_sqrt,NaN,NA,200
cl09h,con_pc,NaN,NA,200
cl09h,con_oecdm,NaN,NA,200
cl09h,con_ae,NaN,NA,200
[1] "Loading dataset cl11h..."
cl11h,market_hh,0.5502,0.0034,200
cl11h,market_sqrt,0.5096,0.0036,200
cl11h,market_pc,0.5334,0.0032,200
cl11h,market_oecdm,0.5135,0.0033,200
cl11h,market_ae,0.5203,0.003,200
cl11h,gross_hh,0.4769,0.0028,200
cl11h,gross_sqrt,0.4499,0.0031,200
cl11h,gross_pc,0.4738,0.0032,200
cl11h,gross_oecdm,0.4522,0.0035,200
cl11h,gross_ae,0.4591,0.0035,200
cl11h,disp_hh,0.4769,0.0034,200
cl11h,disp_sqrt,0.4499,0.0036,200
cl11h,disp_pc,0.4738,0.0033,200
cl11h,disp_oecdm,0.4522,0.0039,200
cl11h,disp_ae,0.4591,0.0032,200
cl11h,con_hh,NaN,NA,200
cl11h,con_sqrt,NaN,NA,200
cl11h,con_pc,NaN,NA,200
cl11h,con_oecdm,NaN,NA,200
cl11h,con_ae,NaN,NA,200
[1] "Loading dataset cl13h..."
cl13h,market_hh,0.5473,0.0027,200
cl13h,market_sqrt,0.5053,0.0028,200
cl13h,market_pc,0.5319,0.0033,200
cl13h,market_oecdm,0.5101,0.0034,200
cl13h,market_ae,0.5177,0.0029,200
cl13h,gross_hh,0.4733,0.0027,200
cl13h,gross_sqrt,0.4432,0.0029,200
cl13h,gross_pc,0.469,0.0031,200
cl13h,gross_oecdm,0.4464,0.0032,200
cl13h,gross_ae,0.4538,0.0029,200
cl13h,disp_hh,0.4733,0.0026,200
cl13h,disp_sqrt,0.4432,0.0033,200
cl13h,disp_pc,0.469,0.0031,200
cl13h,disp_oecdm,0.4464,0.0032,200
cl13h,disp_ae,0.4538,0.0032,200
cl13h,con_hh,NaN,NA,200
cl13h,con_sqrt,NaN,NA,200
cl13h,con_pc,NaN,NA,200
cl13h,con_oecdm,NaN,NA,200
cl13h,con_ae,NaN,NA,200
[1] "Loading dataset cl15h..."
cl15h,market_hh,0.5402,0.0018,200
cl15h,market_sqrt,0.4972,0.0022,200
cl15h,market_pc,0.5223,0.0021,200
cl15h,market_oecdm,0.5016,0.0022,200
cl15h,market_ae,0.5086,0.0025,200
cl15h,gross_hh,0.469,0.0018,200
cl15h,gross_sqrt,0.4376,0.0018,200
cl15h,gross_pc,0.4611,0.0019,200
cl15h,gross_oecdm,0.44,0.0023,200
cl15h,gross_ae,0.4467,0.002,200
cl15h,disp_hh,0.469,0.0018,200
cl15h,disp_sqrt,0.4376,0.0019,200
cl15h,disp_pc,0.4611,0.0024,200
cl15h,disp_oecdm,0.44,0.002,200
cl15h,disp_ae,0.4467,0.0021,200
cl15h,con_hh,NaN,NA,200
cl15h,con_sqrt,NaN,NA,200
cl15h,con_pc,NaN,NA,200
cl15h,con_oecdm,NaN,NA,200
cl15h,con_ae,NaN,NA,200
[1] "Loading dataset cl17h..."
cl17h,market_hh,0.5448,0.0021,200
cl17h,market_sqrt,0.5025,0.002,200
cl17h,market_pc,0.529,0.0024,200
cl17h,market_oecdm,0.5081,0.0022,200
cl17h,market_ae,0.5153,0.0022,200
cl17h,gross_hh,0.4716,0.0019,200
cl17h,gross_sqrt,0.4397,0.0022,200
cl17h,gross_pc,0.4644,0.0021,200
cl17h,gross_oecdm,0.4435,0.0019,200
cl17h,gross_ae,0.4502,0.0019,200
cl17h,disp_hh,0.4716,0.0021,200
cl17h,disp_sqrt,0.4397,0.0023,200
cl17h,disp_pc,0.4644,0.0019,200
cl17h,disp_oecdm,0.4435,0.0021,200
cl17h,disp_ae,0.4502,0.0022,200
cl17h,con_hh,NaN,NA,200
cl17h,con_sqrt,NaN,NA,200
cl17h,con_pc,NaN,NA,200
cl17h,con_oecdm,NaN,NA,200
cl17h,con_ae,NaN,NA,200
> 
> proc.time()
    user   system  elapsed 
1042.345    3.292 1062.463 


